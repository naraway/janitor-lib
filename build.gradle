plugins {
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "name.remal.sonarlint" version "1.5.0"
}

ext {
    janitorVersion = "3.2.1"

    accentVersion = "3.2.+"
    lombokVersion = "1.18.20"
    springBootVersion = "2.6.2"
    springVersion = "5.3.14"
    springCloudVersion = "3.1.0"
    springKafkaVersion = "2.8.1"
    springSecurityOauth2Version = "2.5.1.RELEASE"
    jakartaAnnotationVersion = "1.3.5"
    slf4jVersion = "1.7.32"
}

allprojects {
    group "io.naraway"
    version janitorVersion

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "signing"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "name.remal.sonarlint"

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    dependencies {
        implementation("org.slf4j:slf4j-api:${slf4jVersion}")
        compileOnly("org.projectlombok:lombok:${lombokVersion}")
        testImplementation("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    }

    sonarlint {
        ignoreFailures = false
        excludes {
            source "**/test/java/**/*"

            message "java:S1135" // Track uses of TODO tags
            message "java:S1301" // switch" statements should have at least 3 case clauses
            message "java:S115" // Constant names should comply with a naming convention
            message "java:S1192" // String literals should not be duplicated
            message "java:S3740" // Raw types should not be used
            message "java:S1700" // A field should not duplicate the name of its containing class
            message "java:S106" // Standard outputs should not be used directly to log anything
            message "java:S115" // Constant names should comply with a naming convention
        }
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" // << "-Xlint:unchecked"
    }
}
